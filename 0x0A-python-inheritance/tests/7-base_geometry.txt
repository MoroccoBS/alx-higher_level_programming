The ```BaseGeometry``` class that prints geometry
------------------------------------------------

>>> BaseGeometry = __import__("7-base_geometry").BaseGeometry

Checking for module docstring:
>>> module = __import__("7-base_geometry").BaseGeometry.__doc__
>>> len(module) > 1
True

Checking for class docstring:
>>> docstring = __import__("7-base_geometry").BaseGeometry__doc__
>>> len(docstring) > 1
True

Checking for method docstring
        >>> docstringM = __import__("7-base_geometry").BaseGeometry.area.__doc__
        >>> len(docstringM) > 1
        True

Checking for method docstring
        >>> docstringN = __import__("7-base_geometry").BaseGeometry.integer_validator.__doc__
        >>> len(docstringN) > 1
        True

Test class with given test case
	>>> bg = BaseGeometry()

	>>> bg.integer_validator("my_int", 12)

	>>> bg.integer_validator("width", 89)

	>>> try:
   			bg.integer_validator("name", "John")
		except Exception as e:
    		print("[{}] {}".format(e.__class__.__name__, e))
	[TypeError] name must be an integer
	>>> try:
    		bg.integer_validator("age", 0)
		except Exception as e:
    		print("[{}] {}".format(e.__class__.__name__, e))
	[ValueError] age must be greater than 0
	>>> try:
    		bg.integer_validator("distance", -4)
		except Exception as e:
    		print("[{}] {}".format(e.__class__.__name__, e))
	[ValueError] distance must be greater than 0


Test class with area
    >>> bg = BaseGeometry()
    >>> bg.area()
    Traceback (most recent call last):
    	      ...
    Exception: area() is not implemented


Test class with non-integer
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("name", "5")
    Traceback (most recent call last):
    	      ...
    TypeError: name must be an integer


Test class with boolean value
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("name", True)
    Traceback (most recent call last):
    	      ...
    TypeError: name must be an integer


TTest class with negative value
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("name", -5)
    Traceback (most recent call last):
    	      ...
    ValueError: name must be greater than 0


Test class with zero value
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("name", 0)
    Traceback (most recent call last):
    	      ...
    ValueError: name must be greater than 0


Test class with positive value
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("name", 5)


Test class with one argument to integer_validator
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("name")
    Traceback (most recent call last):
    	      ...
    TypeError: integer_validator() missing 1 required positional argument: 'value'

Test class with Integer_validator with no arguments
    >>> bg = BaseGeometry()
    >>> bg.integer_validator()
    Traceback (most recent call last):
    	      ...
    TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'


Test class with three arguments to integer_validator
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("name", 1, 2)
    Traceback (most recent call last):
    	      ...
    TypeError: integer_validator() takes 3 positional arguments but 4 were given


Test class with one argument to area method
    >>> bg = BaseGeometry()
    >>> bg.area(5)
    Traceback (most recent call last):
    	      ...
    TypeError: area() takes 1 positional argument but 2 were given

Test class with two arguments to area method
    >>> bg = BaseGeometry()
    >>> bg.area(5, 5)
    Traceback (most recent call last):
    	      ...
    TypeError: area() takes 1 positional argument but 3 were given

Test class with tuple to method
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("age", (4,))
    Traceback (most recent call last):
    	      ...
    TypeError: age must be an integer


Test class with list to method
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("age", [3])
    Traceback (most recent call last):
    	      ...
    TypeError: age must be an integer


Test class with dict to method
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("age", {3, 4})
    Traceback (most recent call last):
              ...
    TypeError: age must be an integer


Test class with None to method
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("age", None)
    Traceback (most recent call last):
              ...
    TypeError: age must be an integer